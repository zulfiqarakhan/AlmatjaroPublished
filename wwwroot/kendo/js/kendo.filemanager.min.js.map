{"version":3,"sources":["kendo.filemanager.js"],"names":["f","define","$","undefined","kendo","window","extend","deferred","Deferred","proxy","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","commandStack","_commandStack","dataSource","_viewDataSource","removeProxy","_remove","_item","_createNewModel","push","item","toJSON","fail","add","pushDestroy","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","_itemsToRemove","Array","isArray","_removeItem","itemToRemove","splice","then","remove","CopyCommand","i","targetDataSource","children","fileManagerNewItem","MoveCommand","cloning","promise","promises","_delete","whenAll","always","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","CommandStack","_stack","_keys","guid","next","key","keys","nextCommand","resolve","command","reject","empty","ui","FileManagerCommand","commands","jQuery","amd","a1","a2","a3","ListView","TreeView","Grid","Observable","NAVIGATE","SELECT","EXPAND","CHANGE","OPEN","LOAD","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","registerViewComponent","componentName","component","ViewComponents","getViewComponent","Component","widget","element","Error","_bindEvents","bind","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","refresh","setDataSource","destroy","ViewComponent","explicitOptions","defaultOptions","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","isDirty","_modelFromElement","editable","dirty","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","current","ENTER","preventKendoKeydown","_triggerOpen","entry","addFolder","selected","off","dataTextField","_refreshDataSource","existingItem","action","parentNode","map","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","_nextVisible","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","_setupColumns","grid","mode","confirmation","sortable","columns","title","nameField","icon","getFileGroup","extension","htmlEncode","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","F2","setTimeout","_tryCancel","cancelChanges","container","_editContainer","val","state","addBack","toggleClass","model","_destroyEditable","_displayRow","addRow","editRow","FileManagerDetailsToggle","ToolBar","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","FileManagerToolBar","_extendOptions","_attachEvents","events","concat","defaultTools","createFolder","text","rules","upload","sortDirection","buttons","togglable","group","sortField","menuButtons","changeView","spacer","details","overflow","search","_click","_change","tools","Object","_extendToolsOptions","tool","toolOptions","toolRules","isBuiltInTool","isPlainObject","JSON","parse","deepExtend","attributes","aria-label","data-command","data-options","_mapButtonGroups","_mapMenuButtons","remote","hidden","button","initialView","isToolEnabled","toolName","found","args","fileManagerSearch","SearchTool","input","iconWrapper","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","attr","placeholder","_inputHandler","_input","registerComponent","label","switchElement","switchInstance","Switch","change","checked","detailsChecked","unchecked","detailsUnchecked","fileManagerDetailsToggle","parent","FileEntry","FileManagerDataSource","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","isDirectoryObject","getter","isFunction","_initChildren","transport","parameterMap","_childrenOptions","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_hasDirectories","create","_dataSource","ContextMenu","FileManagerContextMenu","_overrideTemplates","_extendItems","_onSelect","templates","sprite","defaultItems","rename","spriteCssClass","delete","_extendItem","DataBoundWidget","outerHeight","_outerHeight","ERROR","UPLOAD","SUCCESS","HIDE","DATABINDING","DATABOUND","DROP","EXECUTE","COMMAND","CANCEL","TREE_TYPE","DOT","fileManagerStyles","header","navigation","contentContainer","content","preview","treeview","breadcrumb","list","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","fileManagerTemplateStyles","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","viewTypes","NO_FILE_PREVIEW_TEMPLATE","SINGLE_FILES_PREVIEW_TEMPLATE","MULTIPLE_FILES_PREVIEW_TEMPLATE","FileManager","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","notify","height","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","singleFileTemplate","multipleFilesTemplate","sortDirectionAsc","sortDirectionDesc","typeField","dateModifiedField","gridView","okText","close","noFileSelected","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_initUpload","hide","enablePreview","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","selection","styles","html","toolbarElement","toolbarOptions","treeViewElement","_load","_drop","indexOf","DELETE","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","_viewType","viewWrapper","breadcrumbElement","breadcrumbOptions","_breadcrumbChange","Breadcrumb","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","_clearUploadFilesList","primary","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","_open","_cancel","el","join","commandName","commandOptions","navigate","load","sync","res","response","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","values","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","unbindResize","plugin"],"mappings":"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","file":"kendo.filemanager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('filemanager/commands', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, deferred = $.Deferred, proxy = $.proxy, Class = kendo.Class;\n        var Command = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.filemanager = options.filemanager;\n            }\n        });\n        var CreateFolderCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, commandStack = filemanager._commandStack, dataSource = filemanager._viewDataSource || filemanager.dataSource, removeProxy = proxy(that._remove, that);\n                that._item = dataSource._createNewModel();\n                commandStack.push({ item: that._item.toJSON() }).fail(removeProxy);\n                dataSource.add(that._item);\n            },\n            _remove: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager._viewDataSource || filemanager.dataSource;\n                dataSource.pushDestroy(that._item);\n            }\n        });\n        var RenameCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, filemanager = that.filemanager, commandStack = filemanager._commandStack, viewItem = filemanager._view.widgetComponent.dataItem(target);\n                if (target && viewItem) {\n                    commandStack.push({\n                        target: target,\n                        item: viewItem\n                    });\n                    that.filemanager._view.edit(target);\n                } else {\n                    that._renameTreeViewItem(target);\n                }\n            },\n            _renameTreeViewItem: function (target) {\n                var that = this, filemanager = that.filemanager, commandStack = filemanager._commandStack, uid = target.data('uid'), item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid), realItem = that.filemanager.dataSource.get(item.id);\n                that.filemanager._prompt({\n                    type: 'rename',\n                    defaultInput: realItem.name,\n                    target: target\n                }).done(function (newName) {\n                    commandStack.push({\n                        target: target,\n                        item: realItem\n                    });\n                    realItem.set('name', newName);\n                });\n            }\n        });\n        var DeleteCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, filemanager = that.filemanager, items = filemanager.getSelected(), viewItem = that.filemanager._view.widgetComponent.dataItem(target), itemsToRemove;\n                if (target && target.is('.k-state-selected') && items && items.length) {\n                    itemsToRemove = items;\n                } else if (target && viewItem) {\n                    itemsToRemove = viewItem;\n                } else if (target) {\n                    var uid = target.data('uid');\n                    var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                    var realItem = that.filemanager.dataSource.get(item.id);\n                    itemsToRemove = realItem;\n                }\n                filemanager._confirm({\n                    type: 'delete',\n                    target: target\n                }).done(function () {\n                    that.removeItems(itemsToRemove);\n                });\n            },\n            removeItems: function (items) {\n                var that = this;\n                that._itemsToRemove = Array.isArray(items) ? items : [items];\n                that._removeItem();\n            },\n            _removeItem: function () {\n                var that = this, filemanager = that.filemanager, commandStack = filemanager._commandStack, dataSource = filemanager.dataSource, itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0, 1)[0];\n                if (itemToRemove) {\n                    commandStack.push({ item: itemToRemove }).then(proxy(that._removeItem, that), proxy(that._removeItem, that));\n                    dataSource.remove(itemToRemove);\n                }\n            }\n        });\n        var CopyCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, commandStack = filemanager._commandStack, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]).toJSON();\n                    item.fileManagerNewItem = true;\n                    commandStack.push({\n                        item: item,\n                        target: target\n                    });\n                    targetDataSource.add(item);\n                }\n            }\n        });\n        var MoveCommand = Command.extend({\n            init: function (options) {\n                var that = this;\n                Command.fn.init.call(that, options);\n                that._itemsToRemove = [];\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, commandStack = filemanager._commandStack, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children, promises = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]);\n                    var cloning = item.toJSON();\n                    cloning.fileManagerNewItem = true;\n                    var promise = commandStack.push({\n                        item: item,\n                        target: target\n                    }).then(proxy(that._delete, that));\n                    promises.push(promise);\n                    targetDataSource.add(cloning);\n                }\n                kendo.whenAll(promises).always(proxy(that._removeItem, that));\n            },\n            _delete: function (data) {\n                var that = this;\n                that._itemsToRemove.push(data.item);\n            },\n            _removeItem: function () {\n                var that = this, filemanager = that.filemanager, commandStack = filemanager._commandStack, dataSource = filemanager.dataSource, itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0, 1)[0];\n                if (itemToRemove) {\n                    commandStack.push({ item: itemToRemove }).then(proxy(that._removeItem, that), proxy(that._removeItem, that));\n                    dataSource.remove(itemToRemove);\n                }\n            }\n        });\n        var SortCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, sortOptions = filemanager.defaultSortOption;\n                extend(sortOptions, {\n                    dir: options.dir,\n                    field: options.field\n                });\n                filemanager._view.widgetComponent.dataSource.sort([\n                    filemanager.folderSortOption,\n                    sortOptions\n                ]);\n            }\n        });\n        var SearchCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, filter = {\n                        field: options.field,\n                        operator: options.operator,\n                        value: options.value\n                    };\n                filemanager._view.widgetComponent.dataSource.filter(filter);\n            }\n        });\n        var ChangeViewCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager;\n                filemanager.view(options.value);\n                filemanager.resize(true);\n            }\n        });\n        var OpenDialogCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dialog = filemanager[that.options.type];\n                if (dialog) {\n                    dialog.open();\n                } else {\n                    window.console.warn(kendo.format('The {0} dialog is not available!', that.options.type));\n                }\n            }\n        });\n        var TogglePaneCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, pane = filemanager[that.options.type], resizable = that.getResizable();\n                if (pane) {\n                    pane.toggle();\n                    if (resizable) {\n                        filemanager.wrapper.find(resizable.options.handle).toggle();\n                    }\n                }\n            },\n            getResizable: function () {\n                var that = this, filemanager = that.filemanager, type = that.options.type;\n                if (!filemanager._resizeDraggable) {\n                    return;\n                }\n                return filemanager._resizeDraggable[type];\n            }\n        });\n        var CommandStack = Class.extend({\n            init: function () {\n                var that = this;\n                that._stack = {};\n                that._keys = [];\n            },\n            push: function (data) {\n                var that = this, guid = kendo.guid();\n                that._keys.push(guid);\n                that._stack[guid] = {\n                    guid: guid,\n                    data: data,\n                    deferred: deferred()\n                };\n                return that._stack[guid].deferred;\n            },\n            next: function () {\n                var that = this, key = that.keys().splice(0, 1), nextCommand = that._stack[key];\n                return nextCommand;\n            },\n            resolve: function (command) {\n                var that = this;\n                delete that._stack[command.guid];\n                command.deferred.resolve(command.data);\n            },\n            reject: function (command) {\n                var that = this;\n                delete that._stack[command.guid];\n                command.deferred.reject(command.data);\n            },\n            keys: function () {\n                return this._keys;\n            },\n            empty: function () {\n                return this.keys().length === 0;\n            }\n        });\n        extend(kendo.ui, {\n            filemanager: {\n                FileManagerCommand: Command,\n                CommandStack: CommandStack,\n                commands: {\n                    CreateFolderCommand: CreateFolderCommand,\n                    RenameCommand: RenameCommand,\n                    DeleteCommand: DeleteCommand,\n                    MoveCommand: MoveCommand,\n                    CopyCommand: CopyCommand,\n                    SortCommand: SortCommand,\n                    SearchCommand: SearchCommand,\n                    ChangeViewCommand: ChangeViewCommand,\n                    OpenDialogCommand: OpenDialogCommand,\n                    TogglePaneCommand: TogglePaneCommand\n                }\n            }\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/view', [\n        'kendo.listview',\n        'kendo.treeview'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Observable = kendo.Observable, extend = $.extend, proxy = $.proxy, keys = kendo.keys, NAVIGATE = 'navigate', SELECT = 'select', EXPAND = 'expand', CHANGE = 'change', OPEN = 'open', LOAD = 'load', KEYDOWN = 'keydown', KEYDOWNACTION = 'keydownAction', NS = '.kendoFileManagerViewComponent', fileManagerDraggables = [], fileManagerDragOrigin = null;\n        var registerViewComponent = function (componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n        var getViewComponent = function (componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n        var Component = Observable.extend({\n            init: function (widget, element, options) {\n                var that = this;\n                that.element = element;\n                that.options = options;\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error('The widget for the ViewComponent is not available! Please add the corresponding scripts!');\n                }\n                Observable.fn.init.call(that);\n            },\n            _bindEvents: function () {\n                this.widgetComponent.bind('dataBinding', proxy(this._binding, this));\n                this.widgetComponent.bind('dataBound', proxy(this._bound, this));\n            },\n            _binding: function (ev) {\n                if (this.trigger('dataBinding', ev)) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                this.trigger('dataBound');\n            },\n            _setDSOptions: function (options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n            _initDragAndDrop: function (element, filter) {\n                var that = this;\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: proxy(that._hint, that),\n                    cursorOffset: {\n                        top: -10,\n                        left: -50\n                    },\n                    holdToDrag: true,\n                    ignore: 'input, .k-focusable',\n                    hold: proxy(that._hold, that)\n                }).data('kendoDraggable');\n                that.draggable.userEvents.minHold = 150;\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: proxy(that._onDrop, that),\n                    dragenter: function (ev) {\n                        ev.dropTarget.addClass('k-filemanager-drop-target');\n                    },\n                    dragleave: function (ev) {\n                        ev.dropTarget.removeClass('k-filemanager-drop-target');\n                    }\n                }).data('kendoDraggable');\n            },\n            _hold: function (ev) {\n                var that = this, target = ev.currentTarget;\n                if (!target.is('.k-state-selected')) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n            _hint: function (target) {\n                var that = this, item = that.widgetComponent.dataItem(target), selectedItems = that.widgetComponent.select();\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n                if (selectedItems.length > 1) {\n                    return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1} {2}</span></div>', 'file', selectedItems.length, that.options.messages.items);\n                }\n                return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1}</span></div>', item.isDirectory ? 'folder' : 'file', item.name);\n            },\n            _onDrop: function (ev) {\n                var that = this, target = that.widgetComponent.dataItem(ev.dropTarget), targetId = target.id, itemIds = [];\n                if (!target.isDirectory) {\n                    return;\n                }\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n                this.trigger('drop', {\n                    target: targetId,\n                    items: itemIds\n                });\n            },\n            getSelected: function () {\n                throw new Error('Not Implemented!');\n            },\n            refresh: function (dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n            destroy: function () {\n                kendo.destroy(this.element);\n            }\n        });\n        extend(kendo.ui.filemanager, {\n            ViewComponent: Component,\n            ViewComponents: {},\n            registerViewComponent: registerViewComponent,\n            getViewComponent: getViewComponent\n        });\n        var ListView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                that._setDSOptions(options, dataSourceOptions);\n                options.kendoKeydown = options.kendoKeydown || proxy(that._kendoKeydown, that);\n                Component.fn.init.call(this, ui.ListView, element, options);\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                layout: 'flex',\n                flex: {\n                    direction: 'row',\n                    wrap: 'wrap'\n                },\n                selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                template: '<div class=\\'k-listview-item\\' title=\\'#:name##:extension#\\'>' + '<div class=\\'k-file-preview\\'><span class=\\'k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'k-file-name file-name\\'>#:name##:extension#</div>' + '</div>',\n                editTemplate: '<div class=\\'k-listview-item\\'>' + '<div class=\\'k-file-preview\\'><span class=\\'k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'k-file-name\\'><input type=\\'text\\' class=\\'k-textbox\\' data-bind=\\'value:name\\' name=\\'name\\' required=\\'required\\' /></div>' + '</div>',\n                dropFilter: '.k-listview-item',\n                navigatable: true\n            },\n            _bindEvents: function () {\n                var that = this, listView = that.listView;\n                listView.bind(CHANGE, proxy(that._select, that));\n                listView.element.on('dblclick' + NS, proxy(that._dblClick, that));\n                listView.element.on('mousedown' + NS, '.k-listview-item:not(.k-edit-item)', proxy(that._mousedown, that));\n                listView.element.on(KEYDOWN + NS, '.k-edit-item', proxy(that._keydown, that));\n                listView.element.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                listView.bind('edit', function (ev) {\n                    var sender = ev.sender;\n                    ev.item.find('input').on('blur', function () {\n                        var isDirty = sender._modelFromElement(sender.editable.element).dirty;\n                        sender._closeEditable();\n                        if (!isDirty) {\n                            that.trigger('cancel');\n                        }\n                    });\n                });\n                listView.bind('cancel', function () {\n                    that.trigger('cancel');\n                });\n                Component.fn._bindEvents.call(this);\n            },\n            _select: function () {\n                var that = this, dataItems = that.getSelected();\n                that.trigger(SELECT, { entries: dataItems });\n            },\n            _keydown: function (ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                    that.trigger('cancel');\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused');\n                if (target.length && !target.is('.k-edit-item')) {\n                    that.trigger(KEYDOWNACTION, {\n                        target: target,\n                        keyCode: ev.keyCode\n                    });\n                }\n            },\n            _mousedown: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-listview-item');\n                if (ev.which === 3 && !node.is('.k-state-selected')) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n            _kendoKeydown: function (ev) {\n                var that = this, node = that.listView.current();\n                if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._triggerOpen(node);\n                    ev.preventKendoKeydown = true;\n                }\n            },\n            _dblClick: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-listview-item');\n                that._triggerOpen(node);\n            },\n            _triggerOpen: function (node) {\n                var that = this;\n                if (node.is('.k-edit-item')) {\n                    return;\n                }\n                var item = that.listView.dataItem(node);\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n            addFolder: function () {\n                this.listView.add();\n            },\n            edit: function (target) {\n                var that = this, selected = that.listView.select();\n                that.listView.edit(target || selected);\n            },\n            getSelected: function () {\n                var that = this, items = that.listView.select(), dataItems = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n                return dataItems;\n            },\n            destroy: function () {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n        ui.filemanager.registerViewComponent('list', ListView);\n        var TreeView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                Component.fn.init.call(this, ui.TreeView, element, options);\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                dataTextField: 'name',\n                dropFilter: '.k-item'\n            },\n            _refreshDataSource: function (ev) {\n                var that = this, treeView = that.treeView, action = ev.action, node = ev.node, parentNode = null, items = ev.items.filter(function (item) {\n                        return item.isDirectory;\n                    }).map(function (item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n                if (!items.length) {\n                    return;\n                }\n                if (action == 'itemloaded' || parentNode && action === 'sync') {\n                    parentNode.find('.k-item').each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == 'remove') {\n                    this._remove(items[0].id);\n                } else if (action == 'itemchange') {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === 'sync' || action === undefined && !parentNode) {\n                    treeView.items().each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n            },\n            _remove: function (id) {\n                var that = this, treeView = that.treeView, dataSource = treeView.dataSource, item = dataSource.get(id), node;\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n            _bindEvents: function () {\n                var that = this;\n                that.treeView.bind(SELECT, proxy(that._navigate, that));\n                that.treeView.bind(EXPAND, proxy(that._expand, that));\n                that.treeView.element.bind(KEYDOWN, proxy(that._keydownAction, that));\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused').closest('.k-item');\n                that.trigger(KEYDOWNACTION, {\n                    target: target,\n                    keyCode: ev.keyCode\n                });\n            },\n            _expand: function (ev) {\n                var that = this, treeView = that.treeView, entry = treeView.dataItem(ev.node);\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n            _navigate: function (ev) {\n                var that = this, node = ev.node, entry = that.treeView.dataItem(node), path = entry.id;\n                ev.preventDefault();\n                that.trigger(NAVIGATE, {\n                    path: path,\n                    entry: entry.toJSON()\n                });\n            },\n            _hold: $.noop,\n            getSelected: function () {\n                var that = this, selectedItem = that.treeView.element.find('.k-state-selected').closest('.k-item'), item = that.treeView.dataItem(selectedItem);\n                return item;\n            },\n            refresh: function (id) {\n                var that = this, treeView = that.treeView, entry = treeView.dataSource.get(id), node = entry && treeView.findByUid(entry.uid);\n                if (entry && node) {\n                    treeView.element.find('.k-state-selected').removeClass('k-state-selected');\n                    node.find('> div .k-in').removeClass('k-state-hover').addClass('k-state-selected');\n                }\n            },\n            reload: function () {\n                this.treeView.dataSource.read();\n            }\n        });\n        ui.filemanager.registerViewComponent('tree', TreeView);\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function (element, options, explicitOptions) {\n                    var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                    options = extend({}, that.defaultOptions, options, { messages: messages });\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    options.kendoKeydown = options.kendoKeydown || proxy(that._kendoKeydown, that);\n                    Component.fn.init.call(this, ui.Grid, element, options);\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n                },\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                    editable: {\n                        mode: 'inline',\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: 'tr:not(.k-grid-edit-row)',\n                    navigatable: true\n                },\n                _setupColumns: function (options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            {\n                                field: 'name',\n                                title: messages.nameField || 'Name',\n                                template: function (item) {\n                                    var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : 'folder';\n                                    var template = '<div class=\\'file-group-icon\\'>' + '<span class=\\'k-icon k-i-' + icon + '\\'></span>' + '</div>' + '<div class=\\'file-name\\'>' + kendo.htmlEncode(item.name + item.extension) + '<div>';\n                                    return template;\n                                }\n                            },\n                            {\n                                field: 'created',\n                                title: messages.dateCreatedField,\n                                format: '{0:G}'\n                            },\n                            {\n                                field: 'size',\n                                title: messages.sizeField,\n                                template: function (item) {\n                                    if (item.size > 0) {\n                                        return kendo.getFileSizeMessage(item.size);\n                                    } else {\n                                        return '';\n                                    }\n                                }\n                            }\n                        ];\n                    }\n                },\n                _bindEvents: function () {\n                    var that = this, grid = that.grid;\n                    grid.bind(CHANGE, proxy(that._select, that));\n                    grid.table.on('dblclick' + NS, proxy(that._dblClick, that));\n                    grid.table.on('mousedown' + NS, 'tr:not(.k-grid-edit-row)', proxy(that._mousedown, that));\n                    grid.table.on(KEYDOWN + NS, '.k-grid-edit-row', proxy(that._keydown, that));\n                    grid.table.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                    grid.bind('edit', function () {\n                        that._toggleFocusable(true);\n                    });\n                    grid.bind('cancel', function () {\n                        that.trigger('cancel');\n                    });\n                    grid.saveRow = $.noop;\n                    Component.fn._bindEvents.call(this);\n                },\n                _kendoKeydown: function (ev) {\n                    var that = this, current = that.grid.current(), node = current ? current.closest('tr[data-uid]') : null;\n                    if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                        that._triggerOpen(node);\n                        ev.preventKendoKeydown = true;\n                    }\n                    if (ev.keyCode === keys.F2) {\n                        ev.preventKendoKeydown = true;\n                    }\n                },\n                _keydownAction: function (ev) {\n                    var that = this, target = $(ev.target).find('.k-state-focused').closest('tr');\n                    if (target.length && !target.is('.k-grid-edit-row')) {\n                        that.trigger(KEYDOWNACTION, {\n                            target: target,\n                            keyCode: ev.keyCode\n                        });\n                    }\n                },\n                _keydown: function (ev) {\n                    var that = this, grid = that.grid;\n                    if (!$(ev.target).closest('.k-grid-edit-row').length) {\n                        return;\n                    }\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                        that.trigger('cancel');\n                    }\n                },\n                _mousedown: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.which === 3 && !node.is('.k-state-selected')) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n                _tryCancel: function () {\n                    var that = this, grid = that.grid, container;\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find('input').val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n                    setTimeout(function () {\n                        that._toggleFocusable(false);\n                    });\n                },\n                _toggleFocusable: function (state) {\n                    var that = this, grid = that.grid;\n                    grid.table.find('tr,td').children().addBack().toggleClass('k-focusable', state);\n                },\n                _closeEditable: function () {\n                    var that = this, container;\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                        that.trigger('cancel');\n                    }\n                },\n                _select: function () {\n                    var that = this, dataItems = that.getSelected();\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n                _dblClick: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    that._triggerOpen(node);\n                },\n                _triggerOpen: function (node) {\n                    var that = this;\n                    if (node.is('.k-grid-edit-row')) {\n                        return;\n                    }\n                    var item = that.grid.dataItem(node);\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n                getSelected: function () {\n                    var that = this, items = that.grid.select(), dataItems = [];\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n                    return dataItems;\n                },\n                addFolder: function () {\n                    this.grid.addRow();\n                },\n                edit: function (target) {\n                    var that = this, selected = that.grid.select();\n                    that.grid.editRow(target || selected);\n                },\n                destroy: function () {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n            ui.filemanager.registerViewComponent('grid', Grid);\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/toolbar', [\n        'kendo.toolbar',\n        'kendo.switch'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, ToolBar = kendo.ui.ToolBar, Item = kendo.toolbar.Item, CLICK = 'click', TOGGLE = 'toggle', CLOSE = 'close', ACTION = 'action', CHANGE = 'change', NS = '.fileManagerToolbar';\n        var FileManagerToolBar = ToolBar.extend({\n            init: function (element, options) {\n                var that = this;\n                that._extendOptions(options);\n                ToolBar.fn.init.call(that, element, options);\n                that._attachEvents();\n            },\n            events: ToolBar.fn.events.concat([ACTION]),\n            defaultTools: {\n                createFolder: {\n                    type: 'button',\n                    text: 'New Folder',\n                    name: 'createFolder',\n                    command: 'CreateFolderCommand',\n                    rules: '{ \"remote\": true }'\n                },\n                upload: {\n                    type: 'button',\n                    text: 'Upload',\n                    name: 'upload',\n                    command: 'OpenDialogCommand',\n                    options: '{ \"type\": \"uploadDialog\" }',\n                    rules: '{ \"remote\": true }'\n                },\n                sortDirection: {\n                    type: 'buttonGroup',\n                    text: 'Sort Direction',\n                    name: 'sortDirection',\n                    buttons: [\n                        {\n                            name: 'sortDirectionAsc',\n                            icon: 'sort-asc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"asc\" }',\n                            selected: true\n                        },\n                        {\n                            name: 'sortDirectionDesc',\n                            icon: 'sort-desc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"desc\" }'\n                        }\n                    ]\n                },\n                sortField: {\n                    type: 'splitButton',\n                    text: 'Sort By',\n                    name: 'sortField',\n                    command: 'SortCommand',\n                    menuButtons: [\n                        {\n                            name: 'nameField',\n                            text: 'Name',\n                            options: '{\"field\": \"name\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'typeField',\n                            text: 'Type',\n                            options: '{\"field\": \"extension\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'sizeField',\n                            text: 'Size',\n                            options: '{\"field\": \"size\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateCreatedField',\n                            text: 'Date created',\n                            options: '{\"field\": \"createdUtc\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateModifiedField',\n                            text: 'Date modified',\n                            options: '{\"field\": \"modifiedUtc\"}',\n                            command: 'SortCommand'\n                        }\n                    ]\n                },\n                changeView: {\n                    type: 'buttonGroup',\n                    text: 'Change View',\n                    name: 'changeView',\n                    buttons: [\n                        {\n                            name: 'gridView',\n                            icon: 'grid-layout',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'grid'\n                        },\n                        {\n                            name: 'listView',\n                            icon: 'grid',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'list'\n                        }\n                    ]\n                },\n                spacer: { type: 'spacer' },\n                details: {\n                    type: 'fileManagerDetailsToggle',\n                    text: 'View Details',\n                    name: 'details',\n                    overflow: 'never',\n                    command: 'TogglePaneCommand',\n                    options: '{ \"type\": \"preview\" }'\n                },\n                search: {\n                    type: 'fileManagerSearch',\n                    text: 'Search',\n                    name: 'search',\n                    command: 'SearchCommand',\n                    icon: 'search',\n                    overflow: 'never',\n                    options: '{ \"field\": \"name\", \"operator\": \"startswith\" }'\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.bind(TOGGLE, proxy(that._click, that));\n                that.bind(CLOSE, proxy(that._click, that));\n                that.bind(CLICK, proxy(that._click, that));\n                that.bind(CHANGE, proxy(that._change, that));\n            },\n            _extendOptions: function (options) {\n                var that = this, tools = options.items ? options.items : Object.keys(that.defaultTools);\n                that.options = options;\n                that.options.items = that._extendToolsOptions(tools);\n            },\n            _extendToolsOptions: function (tools) {\n                var that = this, messages = that.options.messages;\n                if (!tools.length) {\n                    return;\n                }\n                return tools.map(function (tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name, toolOptions, toolRules;\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool]);\n                    toolRules = toolOptions.rules ? JSON.parse(toolOptions.rules) : {};\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.name + '-' + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name],\n                        attributes: {\n                            'aria-label': messages[toolOptions.name],\n                            'title': messages[toolOptions.name],\n                            'data-command': toolOptions.command,\n                            'data-options': toolOptions.options\n                        },\n                        overflow: toolOptions.overflow\n                    });\n                    if (toolOptions.type === 'buttonGroup') {\n                        toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                    }\n                    if (toolOptions.type === 'splitButton') {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                    }\n                    if (toolRules.remote && that.options.filemanager.dataSource.isLocalBinding) {\n                        toolOptions.hidden = true;\n                    }\n                    return toolOptions;\n                }, that);\n            },\n            _mapButtonGroups: function (button) {\n                var that = this, messages = that.options.messages;\n                if (button.group === 'changeView' && button.options === that.options.filemanager.options.initialView) {\n                    button.selected = true;\n                }\n                return kendo.deepExtend(button, {\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _mapMenuButtons: function (button) {\n                var that = this, messages = that.options.messages;\n                return kendo.deepExtend(button, {\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _click: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            _change: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                options = extend({}, options, { value: $(ev.target).val() });\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            isToolEnabled: function (toolName) {\n                var that = this, options = that.options, found = false;\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n                return options.items[toolName] || found;\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            },\n            destroy: function () {\n                if (this.fileManagerSearch) {\n                    this.fileManagerSearch.destroy();\n                }\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n        var SearchTool = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-search-tool k-textbox\\'></div>'), input = $('<input class=\\'k-input\\' autocomplete=\\'off\\' />'), iconWrapper = $('<span class=\\'k-input-icon\\'></span>'), icon = $('<span />');\n                that.element = element;\n                that.input = input;\n                that.iconWrapper = iconWrapper;\n                that.icon = icon;\n                that.options = options;\n                that.options.type = 'fileManagerSearch';\n                that.toolbar = toolbar;\n                that.attributes();\n                that.renderIcon();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n                that.iconWrapper.append(icon);\n                that.element.append(that.input).append(iconWrapper);\n                that._bindEvents();\n                that.toolbar.fileManagerSearch = that;\n            },\n            attributes: function () {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function () {\n                if (this.options.icon) {\n                    this.icon.addClass('k-icon k-i-' + this.options.icon);\n                }\n            },\n            _bindEvents: function () {\n                this._inputHandler = proxy(this._input, this);\n                this.input.on('input' + NS, this._inputHandler);\n            },\n            _input: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerSearch', SearchTool);\n        var FileManagerDetailsToggle = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-details-toggle\\'></div>'), label = $('<label>' + options.text + '</label>'), switchElement = $('<input title=\\'' + options.text + '\\' />');\n                that.element = element;\n                that.input = switchElement;\n                that.label = label;\n                that.options = options;\n                that.toolbar = toolbar;\n                that.attributes();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.element.append(that.label);\n                that.element.append(that.input);\n                that.switchInstance = new kendo.ui.Switch(that.input, {\n                    change: proxy(that._change, that),\n                    messages: {\n                        checked: toolbar.options.messages.detailsChecked,\n                        unchecked: toolbar.options.messages.detailsUnchecked\n                    }\n                });\n                that.label.on(CLICK + NS, proxy(that._click, that));\n                that.toolbar.fileManagerDetailsToggle = that;\n            },\n            _change: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.sender.wrapper.parent() });\n            },\n            _click: function (ev) {\n                this.switchInstance.toggle();\n                this.toolbar.trigger(CHANGE, { target: $(ev.target).parent() });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerDetailsToggle', FileManagerDetailsToggle);\n        extend(kendo.ui.filemanager, { ToolBar: FileManagerToolBar });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/data', ['kendo.data'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, data = kendo.data, Node = data.Node, HierarchicalDataSource = data.HierarchicalDataSource, DataSource = data.DataSource;\n        extend(true, kendo.data, {\n            schemas: {\n                'filemanager': {\n                    data: function (data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: 'path',\n                        hasChildren: 'hasDirectories',\n                        fields: {\n                            name: {\n                                editable: true,\n                                type: 'String',\n                                defaultValue: 'New Folder'\n                            },\n                            size: {\n                                editable: false,\n                                type: 'Number'\n                            },\n                            path: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            extension: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            isDirectory: {\n                                editable: false,\n                                defaultValue: true,\n                                type: 'Boolean'\n                            },\n                            hasDirectories: {\n                                editable: false,\n                                defaultValue: false,\n                                type: 'Boolean'\n                            },\n                            created: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            createdUtc: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modified: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modifiedUtc: {\n                                type: 'Date',\n                                editable: false\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        var FileEntry = Node.define({\n            init: function (value) {\n                var that = this, isDirectory = this.isDirectory;\n                Node.fn.init.call(this, value);\n                if (typeof isDirectory === 'string') {\n                    isDirectory = kendo.getter(isDirectory);\n                }\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        if (type === 'read' || type === 'create') {\n                            data.target = that.id;\n                        }\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind('change', function (e) {\n                        e.node = e.node || that;\n                        that.trigger('change', e);\n                    });\n                    children.bind('error', function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger('error', e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function () {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n                return this.id === this._defaultId;\n            }\n        });\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function (options) {\n                var fileEntry = FileEntry.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, $.extend(true, {}, {\n                    schema: {\n                        modelBase: fileEntry,\n                        model: fileEntry\n                    }\n                }, options));\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n                this._attachBubbleHandlers();\n            },\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n                return result;\n            },\n            _hasDirectories: function (node) {\n                var result;\n                if (!node.children.data()) {\n                    return false;\n                }\n                result = node.children.data().filter(function (item) {\n                    return item.isDirectory;\n                });\n                return !!result.length;\n            }\n        });\n        FileManagerDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            dataSource.data = data;\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/contextmenu', ['kendo.menu'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, template = kendo.template, ContextMenu = kendo.ui.ContextMenu, ACTION = 'action';\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function (element, options) {\n                var that = this;\n                ContextMenu.fn.init.call(that, element, options);\n                that._overrideTemplates();\n                that._extendItems();\n                that.bind('select', proxy(that._onSelect, that));\n            },\n            _overrideTemplates: function () {\n                this.templates.sprite = template('#if(spriteCssClass) {#<span class=\\'#= spriteCssClass #\\'></span>#}#');\n            },\n            defaultItems: {\n                'rename': {\n                    text: 'Rename',\n                    spriteCssClass: 'k-icon k-i-edit',\n                    command: 'RenameCommand'\n                },\n                'delete': {\n                    text: 'Delete',\n                    spriteCssClass: 'k-icon k-i-delete',\n                    command: 'DeleteCommand'\n                }\n            },\n            events: ContextMenu.fn.events.concat([ACTION]),\n            _extendItems: function () {\n                var that = this, items = that.options.items, item, isBuiltInTool;\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n                        if ($.isPlainObject(item)) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n            _extendItem: function (item) {\n                var that = this, messages = that.options.messages;\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || '',\n                    attr: { 'data-command': item.command }\n                });\n            },\n            _onSelect: function (ev) {\n                var command = $(ev.item).data('command');\n                var target = $(ev.target);\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            }\n        });\n        extend(kendo.ui.filemanager, { ContextMenu: FileManagerContextMenu });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.filemanager', [\n        'filemanager/commands',\n        'filemanager/view',\n        'filemanager/toolbar',\n        'filemanager/data',\n        'filemanager/contextmenu',\n        'kendo.breadcrumb',\n        'kendo.upload',\n        'kendo.dialog',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filemanager',\n        name: 'FileManager',\n        category: 'web',\n        description: 'The FileManager widget displays offers file management functionality.',\n        depends: [\n            'core',\n            'data',\n            'listview',\n            'toolbar',\n            'breadcrumb',\n            'menu',\n            'treeview',\n            'upload',\n            'dialog',\n            'switch',\n            'resizable',\n            'selectable',\n            'editable'\n        ],\n        features: [{\n                id: 'filemanager-grid-view',\n                name: 'GridView',\n                description: 'Support for GridView',\n                depends: ['grid']\n            }]\n    };\n    (function ($, undefined) {\n        var ui = kendo.ui, extend = $.extend, isPlainObject = $.isPlainObject, isArray = $.isArray, DataBoundWidget = ui.DataBoundWidget, proxy = $.proxy, template = kendo.template, outerHeight = kendo._outerHeight, NAVIGATE = 'navigate', SELECT = 'select', OPEN = 'open', ERROR = 'error', CHANGE = 'change', UPLOAD = 'upload', SUCCESS = 'success', CLOSE = 'close', HIDE = 'hide', LOAD = 'load', DATABINDING = 'dataBinding', DATABOUND = 'dataBound', DROP = 'drop', EXECUTE = 'execute', COMMAND = 'command', KEYDOWNACTION = 'keydownAction', CANCEL = 'cancel', TREE_TYPE = 'tree', DOT = '.';\n        var fileManagerStyles = {\n            wrapper: 'k-widget k-filemanager',\n            header: 'k-filemanager-header',\n            navigation: 'k-filemanager-navigation',\n            contentContainer: 'k-filemanager-content-container',\n            content: 'k-filemanager-content',\n            preview: 'k-filemanager-preview',\n            toolbar: 'k-filemanager-toolbar',\n            treeview: 'k-filemanager-treeview',\n            breadcrumb: 'k-filemanager-breadcrumb',\n            view: 'k-filemanager-view',\n            grid: 'k-filemanager-grid',\n            list: 'k-filemanager-listview',\n            upload: 'k-filemanager-upload',\n            uploadDialog: 'k-filemanager-upload-dialog',\n            splitBar: 'k-splitbar',\n            splitBarHorizontal: 'k-splitbar-horizontal k-splitbar-draggable-horizontal',\n            splitBarHover: 'k-splitbar-horizontal-hover',\n            splitBarIcon: 'k-icon k-resize-handle',\n            splitBarNavigation: 'k-filemanager-splitbar-navigation',\n            splitBarPreview: 'k-filemanager-splitbar-preview',\n            resizable: 'k-filemanager-resizable'\n        };\n        var fileManagerTemplateStyles = {\n            filePreview: 'k-file-preview',\n            fileInfo: 'k-file-info',\n            fileName: 'k-file-name',\n            fileMeta: 'k-file-meta',\n            metaLabel: 'k-file-meta-label',\n            metaValue: 'k-file-meta-value',\n            extension: 'k-file-type',\n            size: 'k-file-size',\n            created: 'k-file-created',\n            modified: 'k-file-modified'\n        };\n        var viewTypes = {\n            grid: 'grid',\n            list: 'list'\n        };\n        var NO_FILE_PREVIEW_TEMPLATE = '' + '<div class=\"#:styles.fileInfo#\">' + '<div class=\"#:styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-none\"></span>' + '</div>' + '<span class=\"#:styles.fileName#\" k-no-file-selected>#: messages.noFileSelected #</span>' + '</div>';\n        var SINGLE_FILES_PREVIEW_TEMPLATE = '' + '<div class=\"#:styles.fileInfo#\">' + '<div class=\"#:styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-#: !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension, true) : \"folder\" #\"></span>' + '</div>' + '<span class=\"#:styles.fileName#\">#:selection[0].name#</span>' + '#if(metaFields){#' + '<dl class=\"#:styles.fileMeta#\">' + '#for(var i = 0; i < metaFields.length; i+=1){#' + '#var field = metaFields[i]#' + '<dt class=\"#:styles.metaLabel#\">#:messages[field]#: </dt>' + '<dd class=\"#:styles.metaValue# #:styles[field]#\">' + '#if(field == \"size\"){#' + ' #:kendo.getFileSizeMessage(selection[0][field])#' + '#} else if(selection[0][field] instanceof Date) {#' + ' #:kendo.toString(selection[0][field], \"G\")#' + '#} else if(field == \"extension\") {#' + ' #: !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"#' + '#} else {#' + ' #:selection[0][field]#' + '#}#' + '</dd>' + '<dd class=\"k-line-break\"></dd>' + '# } #' + '</dl>' + '#}#' + '</div>';\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = '' + '<div class=\"#:styles.fileInfo#\">' + '<div class=\"#:styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-file\"></span>' + '</div>' + '<span class=\"#:styles.fileName#\">' + '#:selection.length# ' + '#:messages.items#' + '</span>' + '</div>';\n        var FileManager = DataBoundWidget.extend({\n            init: function (element, options) {\n                var that = this;\n                DataBoundWidget.fn.init.call(that, element, options);\n                that.options = kendo.deepExtend({}, that.options, options);\n                that.defaultSortOption = {\n                    field: 'name',\n                    dir: 'asc'\n                };\n                that.folderSortOption = {\n                    field: 'isDirectory',\n                    dir: 'desc'\n                };\n                that._commandStack = new ui.filemanager.CommandStack();\n                that._dataSource();\n                that._wrapper();\n                that._renderHeader();\n                that._renderContentContainer();\n                that._initContextMenu();\n                that._renderNavigation();\n                that._renderContent();\n                that._renderPreview();\n                that._initUploadDialog();\n                that._resizable();\n                that.resize();\n                kendo.notify(that, kendo.ui);\n            },\n            options: {\n                name: 'FileManager',\n                height: 500,\n                resizable: true,\n                initialView: viewTypes.list,\n                toolbar: { resizable: true },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: '',\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: { width: 530 },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\n                        'extension',\n                        'size',\n                        'created',\n                        'modified'\n                    ],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: 'New Folder',\n                        upload: 'Upload',\n                        sortDirection: 'Sort Direction',\n                        sortDirectionAsc: 'Sort Direction Ascending',\n                        sortDirectionDesc: 'Sort Direction Descending',\n                        sortField: 'Sort By',\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        listView: 'List View',\n                        gridView: 'Grid View',\n                        search: 'Search',\n                        details: 'View Details',\n                        detailsChecked: 'On',\n                        detailsUnchecked: 'Off',\n                        'delete': 'Delete',\n                        rename: 'Rename'\n                    },\n                    views: {\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        items: 'items'\n                    },\n                    dialogs: {\n                        upload: {\n                            title: 'Upload Files',\n                            clear: 'Clear List',\n                            done: 'Done'\n                        },\n                        moveConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Do you want to move or copy?</p>',\n                            okText: 'Copy',\n                            cancel: 'Move',\n                            close: 'close'\n                        },\n                        deleteConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>',\n                            okText: 'Delete',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        },\n                        renamePrompt: {\n                            title: 'Prompt',\n                            content: '<p style=\\'text-align: center;\\'>Enter new name for the file.</p>',\n                            okText: 'Rename',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: 'No File Selected',\n                        extension: 'Type',\n                        size: 'Size',\n                        created: 'Date Created',\n                        createdUtc: 'Date Created UTC',\n                        modified: 'Date Modified',\n                        modifiedUtc: 'Date Modified UTC',\n                        items: 'items'\n                    }\n                }\n            },\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE,\n                COMMAND\n            ],\n            _dataSource: function () {\n                var that = this, options = that.options, dataSourceOptions = options.dataSource || {}, typeSortOrder = that.folderSortOption, nameSortOrder = that.defaultSortOption, dataSource;\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        });\n                    }\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = proxy(that._error, that);\n                    that._changeHandler = proxy(that._change, that);\n                }\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource).bind(ERROR, that._errorHandler).bind(CHANGE, that._changeHandler);\n            },\n            _error: function (ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    window.console.warn('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n            _wrapper: function () {\n                var that = this, options = that.options, width = options.width, height = options.height;\n                that.wrapper = that.element.addClass(fileManagerStyles.wrapper);\n                if (width) {\n                    that.wrapper.width(width);\n                }\n                if (height) {\n                    that.wrapper.height(height);\n                }\n                that._resizeHandler = kendo.onResize(function () {\n                    that.resize(true);\n                });\n            },\n            _renderHeader: function () {\n                var that = this, options = that.options;\n                if (options.toolbar) {\n                    that.header = $('<div />').addClass(fileManagerStyles.header);\n                    that.header.append(that._initToolbar().element);\n                }\n                that.wrapper.append(that.header);\n            },\n            _renderContentContainer: function () {\n                var that = this, container = $('<div />').addClass(fileManagerStyles.contentContainer);\n                that.contentContainer = container;\n                that.wrapper.append(that.contentContainer);\n            },\n            _initContextMenu: function () {\n                var that = this, options = that.options, menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: '[data-uid]',\n                        action: that.executeCommand.bind(that)\n                    });\n                if (that.options.contextMenu === false || that.dataSource.isLocalBinding) {\n                    return;\n                }\n                that.contextMenu = new ui.filemanager.ContextMenu('<ul></ul>', menuOptions);\n                that.contextMenu.bind(OPEN, proxy(that._cacheFocus, that));\n            },\n            _renderNavigation: function () {\n                var that = this;\n                that.navigation = $('<div />').addClass(fileManagerStyles.navigation);\n                that.navigation.append(that._initTreeView().element);\n                that.contentContainer.append(that.navigation);\n            },\n            _renderContent: function () {\n                var that = this, options = that.options, toolbar = that.toolbar;\n                that.content = $('<div />').addClass(fileManagerStyles.content);\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n                that.content.append(that._initView());\n                if (!toolbar || !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n                that.contentContainer.append(that.content);\n            },\n            _renderPreview: function () {\n                var that = this, enablePreview = that.options.previewPane;\n                if (!enablePreview) {\n                    return;\n                }\n                that.preview = $('<div />').addClass(fileManagerStyles.preview);\n                that.previewContainer = $('<div />').addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n                that._setPreviewPaneContent();\n                that.contentContainer.append(that.preview.hide());\n            },\n            _setPreviewPaneContent: function () {\n                var that = this, options = that.options, previewPaneMessages = options.messages.previewPane, previewPaneOptions = options.previewPane, selection = that.getSelected(), previewTemplate;\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                        styles: fileManagerTemplateStyles,\n                        messages: previewPaneMessages\n                    });\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n                previewTemplate = selection.length === 1 ? previewPaneOptions.singleFileTemplate : previewPaneOptions.multipleFilesTemplate;\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n                that.previewContainer.html(previewTemplate);\n            },\n            _initToolbar: function () {\n                var that = this, options = that.options, toolbarElement = $('<div />').addClass(fileManagerStyles.toolbar), toolbarOptions = extend({}, options.toolbar, {\n                        filemanager: this,\n                        messages: options.messages.toolbar,\n                        action: that.executeCommand.bind(that)\n                    });\n                that.toolbar = new ui.filemanager.ToolBar(toolbarElement, toolbarOptions);\n                return that.toolbar;\n            },\n            _initTreeView: function () {\n                var that = this, treeViewElement = $('<div />').addClass(fileManagerStyles.treeview), options = that.options.views[TREE_TYPE], explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n                that.treeView.bind(NAVIGATE, proxy(that._navigate, that)).bind(LOAD, proxy(that._load, that)).bind(DROP, proxy(that._drop, that)).bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                return that.treeView;\n            },\n            _drop: function (ev) {\n                var that = this;\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: 'move',\n                        target: ev.target\n                    }).done(function () {\n                        that.executeCommand({\n                            command: 'CopyCommand',\n                            options: ev\n                        });\n                    }).fail(function () {\n                        that.executeCommand({\n                            command: 'MoveCommand',\n                            options: ev\n                        });\n                    });\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, keyCode = ev.keyCode, keys = kendo.keys;\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({\n                        command: 'DeleteCommand',\n                        options: { target: ev.target }\n                    });\n                }\n                if (keyCode === keys.F2) {\n                    that.executeCommand({\n                        command: 'RenameCommand',\n                        options: { target: ev.target }\n                    });\n                }\n            },\n            _confirm: function (options) {\n                var that = this, messages = that.options.messages.dialogs[options.type + 'Confirm'];\n                var confirm = $('<div></div>').kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + 'Confirm'])).data('kendoConfirm');\n                confirm.bind(OPEN, proxy(that._cacheFocus, that));\n                confirm.bind(HIDE, proxy(that._restoreFocus, that, options.target));\n                confirm.open();\n                confirm.wrapper.removeClass('k-confirm');\n                return confirm.result;\n            },\n            _prompt: function (options) {\n                var that = this, messages = this.options.messages.dialogs[options.type + 'Prompt'];\n                var prompt = $('<div></div>').kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                }, this.options.dialogs[options.type + 'Prompt'])).data('kendoPrompt');\n                prompt.bind(OPEN, proxy(that._cacheFocus, that));\n                prompt.bind(CLOSE, proxy(that._restoreFocus, that, options.target));\n                prompt.open();\n                prompt.wrapper.removeClass('k-prompt');\n                return prompt.result;\n            },\n            _cacheFocus: function () {\n                var that = this, activeElement = $(document.activeElement), view = that.view(), treeView = that.treeView.widgetComponent;\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n                that.treeView._shouldFocus = false;\n                if (treeView.current() && treeView.current().find('.k-state-focused').length || activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                    view._focusElement = activeElement;\n                    return;\n                }\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ? activeElement : null;\n            },\n            _restoreFocus: function (target) {\n                var that = this, view = that.view();\n                if (!target) {\n                    return;\n                }\n                if (view._focusElement) {\n                    view._focusElement.focus();\n                } else if (target.closest && target.closest(':kendoFocusable').length) {\n                    target.closest(':kendoFocusable').focus();\n                }\n            },\n            _initView: function () {\n                var that = this, viewWrapper = $('<div />').addClass(fileManagerStyles.view), initialView = that.options.initialView;\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n                return viewWrapper;\n            },\n            _initBreadcrumb: function () {\n                var that = this, options = that.options, breadcrumbElement = $('<nav />').addClass(fileManagerStyles.breadcrumb), breadcrumbOptions = extend({}, {\n                        items: [{\n                                type: 'rootitem',\n                                text: ''\n                            }],\n                        change: proxy(that._breadcrumbChange, that)\n                    }, options.breadcrumb);\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n                return that.breadcrumb;\n            },\n            _breadcrumbChange: function (ev) {\n                this._navigate({ path: ev.value });\n            },\n            _initUploadDialog: function () {\n                var that = this, options = that.options, dialogMessages = options.messages.dialogs.upload, dialogElement = $('<div />'), dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            {\n                                text: dialogMessages.clear,\n                                action: proxy(that._clearUploadFilesList, that)\n                            },\n                            {\n                                text: dialogMessages.done,\n                                primary: true\n                            }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload), uploadInstance;\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n                uploadInstance = that._initUpload();\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n                that.uploadDialog.bind(OPEN, proxy(that._toggleUploadDropZone, that, ''));\n                that.uploadDialog.bind(CLOSE, proxy(that._toggleUploadDropZone, that, that.viewWrapper));\n                return that.uploadDialog;\n            },\n            _shouldInitUpload: function () {\n                var that = this, options = that.options, shouldInit = false;\n                if ((options.uploadUrl || options.upload.async && options.upload.async.saveUrl) && options.upload !== false) {\n                    shouldInit = true;\n                }\n                return shouldInit;\n            },\n            _initUpload: function () {\n                var that = this, options = that.options, uploadElement = $('<input type=\\'file\\' name=\\'file\\'/>').addClass(fileManagerStyles.upload), uploadOptions = extend(true, {\n                        async: {\n                            autoUpload: true,\n                            saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n                that.upload.bind(UPLOAD, proxy(that._sendUploadPathParameter, that));\n                that.upload.bind(SUCCESS, proxy(that._success, that));\n                return that.upload;\n            },\n            _sendUploadPathParameter: function (ev) {\n                ev.data = extend(ev.data, { path: this.path() });\n            },\n            _success: function () {\n                this._view.widgetComponent.dataSource.read();\n            },\n            _clearUploadFilesList: function () {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n            _toggleUploadDropZone: function (zone) {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n            _binding: function (ev) {\n                if (this.trigger(DATABINDING, {\n                        source: 'view',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n            _createResizableSplitBar: function (cssClass) {\n                var splitBar = $('<div />').addClass(fileManagerStyles.splitBar).addClass(fileManagerStyles.splitBarHorizontal).addClass(cssClass), icon = $('<span />').addClass(fileManagerStyles.splitBarIcon);\n                splitBar.append(icon);\n                splitBar.hover(function () {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n                return splitBar;\n            },\n            _initResizableNavigation: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation), contentWrapperWidth, navigationWrapperWidth;\n                splitBar.insertAfter(navigationWrapper);\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarNavigation,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        navigationWrapperWidth = navigationWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                            return;\n                        }\n                        navigationWrapper.width(navigationWrapperWidth + delta);\n                    }\n                }).getKendoResizable();\n            },\n            _initResizablePreview: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), previewWrapper = wrapper.find(DOT + fileManagerStyles.preview), contentWrapperWidth, previewWrapperWidth;\n                if (!that.options.previewPane) {\n                    return;\n                }\n                splitBar.insertBefore(previewWrapper).hide();\n                that._resizeDraggable.preview = wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarPreview,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        previewWrapperWidth = previewWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                            return;\n                        }\n                        previewWrapper.width(previewWrapperWidth - delta);\n                    }\n                }).getKendoResizable();\n            },\n            _resizable: function () {\n                var that = this, options = that.options;\n                that._resizeDraggable = {};\n                if (!options.resizable) {\n                    return;\n                }\n                that.wrapper.addClass(fileManagerStyles.resizable);\n                that._initResizableNavigation();\n                that._initResizablePreview();\n            },\n            view: function (type) {\n                var that = this, element = $('<div></div>'), options = that.options.views[type], explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable\n                    });\n                if (type === undefined) {\n                    return that._view;\n                }\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format('There is no {0} ViewComponent registered!', type));\n                }\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n                that._view.bind(SELECT, proxy(that._select, that));\n                that._view.bind(OPEN, proxy(that._open, that));\n                that._view.bind(DATABINDING, proxy(that._binding, that));\n                that._view.bind(DATABOUND, proxy(that._bound, that));\n                that._view.bind(DROP, proxy(that._drop, that));\n                that._view.bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                that._view.bind(CANCEL, proxy(that._cancel, that));\n                that._view.element.addClass(fileManagerStyles[type]);\n                that.viewWrapper.removeClass(Object.keys(ui.filemanager.ViewComponents).map(function (el) {\n                    return fileManagerStyles.view + '-' + el;\n                }).join(' ')).addClass(fileManagerStyles.view + '-' + type);\n                that.viewWrapper.append(that._view.element);\n            },\n            executeCommand: function (args) {\n                var commandName = args.command, commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }), command = new ui.filemanager.commands[commandName](commandOptions);\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n            _navigate: function (ev) {\n                var that = this, path = ev.path;\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n            _load: function (ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n            _select: function (ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n            _open: function (ev) {\n                var that = this, entry = ev.entry;\n                that.trigger(OPEN, { entry: entry });\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n            _cancel: function () {\n                var that = this, commandStack = that._commandStack, command = commandStack.next();\n                commandStack.reject(command);\n                that.trigger(COMMAND, {\n                    status: 'cancel',\n                    action: 'itemchange',\n                    data: command.data\n                });\n            },\n            _change: function (ev) {\n                var that = this, commandStack = that._commandStack, targetDataSource = ev.node ? ev.node.children : that.dataSource;\n                if (that.trigger(DATABINDING, {\n                        source: 'tree',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    return;\n                }\n                that.treeView._refreshDataSource(ev);\n                if (ev.action === 'remove' || ev.action === 'itemchange' || ev.action === 'add') {\n                    if (commandStack.empty()) {\n                        targetDataSource.sync();\n                    } else {\n                        var command = commandStack.next();\n                        targetDataSource.sync().then(function (res) {\n                            commandStack.resolve(command);\n                            that.trigger(COMMAND, {\n                                status: 'success',\n                                action: ev.action,\n                                data: command.data,\n                                response: res\n                            });\n                        }).fail(function (res) {\n                            commandStack.reject(command);\n                            that.trigger(COMMAND, {\n                                status: 'fail',\n                                action: ev.action,\n                                data: command.data,\n                                response: res\n                            });\n                        });\n                    }\n                }\n                if (ev.action === 'remove' && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action == 'itemchange' && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action === 'itemchange') {\n                    ev.items[0].loaded(false);\n                }\n            },\n            _navigateToParent: function (item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : '';\n                that._navigate({ path: parentNodePath });\n            },\n            _buildBreadcrumbPath: function (entry) {\n                var that = this, breadcrumb = that.breadcrumb, values = [];\n                while (entry) {\n                    values.push(entry.name);\n                    entry = entry.parentNode();\n                }\n                values.push('');\n                breadcrumb.value(values.reverse().join('/'));\n            },\n            _adjustDimensions: function () {\n                var that = this, wrapper = that.wrapper, gridSelector = DOT + fileManagerStyles.grid, listViewSelector = DOT + fileManagerStyles.list, contentContainer = DOT + fileManagerStyles.contentContainer, totalHeight = wrapper.height(), toolbarHeight = 0, breadcrumbHeight = 0;\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n                if (that.options.height !== 'auto') {\n                    wrapper.find([gridSelector].join(',')).height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(listViewSelector).parent().height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(contentContainer).height(totalHeight - toolbarHeight);\n                }\n            },\n            _resize: function () {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that.header.append(that._initToolbar().element);\n                }\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigation.empty();\n                    that.navigation.append(that._initTreeView().element);\n                }\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n                that._initContextMenu();\n            },\n            refresh: function () {\n                var that = this, dataSource = that._viewDataSource || that.dataSource;\n                dataSource.read();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.wrapper);\n            },\n            getSelected: function () {\n                var that = this, items = that._view.getSelected(), treeView = that.treeView;\n                if (items && items.length) {\n                    return items;\n                }\n                var item = treeView.getSelected();\n                if (item) {\n                    return [that.dataSource.get(item.id)];\n                }\n            },\n            path: function () {\n                return this._path || '';\n            },\n            navigate: function (path) {\n                var that = this, dataSource = that.dataSource, entry = dataSource.get(path.replace(/^\\//, '')), view = that._view, treeView = that.treeView, breadcrumb = that.breadcrumb;\n                that._path = path;\n                if (that.trigger(DATABINDING, {\n                        source: 'navigation',\n                        action: 'rebind',\n                        items: [entry]\n                    })) {\n                    return;\n                }\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n                if (path === '' || path === '/') {\n                    dataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n                    return;\n                }\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    view.refresh(that._viewDataSource);\n                    that._viewDataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                }\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n            destroy: function () {\n                var that = this;\n                DataBoundWidget.fn.destroy.call(that);\n                that.dataSource.unbind(ERROR, that._errorHandler).unbind(CHANGE, that._changeHandler);\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.dataSource = null;\n                that._viewDataSource = null;\n                kendo.destroy(that.element);\n            }\n        });\n        ui.plugin(FileManager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}